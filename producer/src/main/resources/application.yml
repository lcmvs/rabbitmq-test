server:
  port: 2001

spring:
  profiles:
    active: dev
  application:
    name: rabbitmq-test
  rabbitmq:
    #指定心跳超时，单位秒，0为不指定；默认60s
    requested-heartbeat: 10
    #发布确认类型
    publisher-confirm-type: simple
    #是否支持发布回退
    publisher-returns: true
    #连接超时，单位毫秒，0表示无穷大
    connection-timeout: 10000
    #客户端请求的每个连接的通道数。使用0表示无限。默认2047
    requested-channel-max: 2047
    cache:
      channel:
        #缓存中保留的channel数量
        size: 5
        #达到size以后，等待获取channel的超时时间，0代表总数创建一个新的
        checkout-timeout: 0
      connection:
        #连接工厂缓存模式 channel：只有一个连接，connection：多个连接，每个连接拥有自己的channel
        mode: channel
        #缓存连接数，connection模式下使用
        size: 1
    template:
      # mandatory参数 找不到queue时，true：将消息返回给生产者，false：丢弃
      mandatory: true
      # receive()超时
      receiveTimeout: 1000
      # sendAndReceive()超时
      reply-timeout: 1000
      # 生产者默认使用交换机，默认 ""
      # exchange: ""
      # 生产者默认使用路由键，默认 ""
      #routing-key: ""
      # 默认使用接收消息的queue
      #default-receive-queue:
      retry:
        #是否开启重试
        enabled: true
        #最大重试次数，默认：3
        max-attempts: 3
        #首次重试超时时间 ms
        initial-interval: 1000
        #重试间隔乘数
        multiplier: 1
        #最大重试超时时间
        max-interval: 10000
    listener:
      # listener类型 simple:消费者共用一个线程池; direct:
      type: simple
      simple:
        concurrency: 1
        max-concurrency: 1
        batch-size: 3
        #是否在启动时自动启动容器
        auto-startup: true
        #消费确认模式
        acknowledge-mode: auto
        #消费者可以持有的最大未确认消息
        prefetch: 1
        #拒绝的是否重新放入队列 , （设置false才会放入死信队列）
        default-requeue-rejected: false
        # container空闲事件多久发布一次
        idle-event-interval: 10000
      direct:
        consumers-per-queue: 5










